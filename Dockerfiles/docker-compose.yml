version: '3'

services:

  nodeos:
    container_name: nodeos
    hostname: nodeos
    build:
      context: .
      dockerfile: build-eosio-testnet.dockerfile
    image: eosio-testnet:latest
    command: nodeos --config-dir /root/.local/share/eosio/nodeos/config/ --config config.ini --logconf /root/.local/share/eosio/nodeos/config/logging.json --genesis-json /root/.local/share/eosio/nodeos/config/genesis.json
    stop_grace_period: 1m0s
    networks:
      - testnet
    volumes:
      - ../eosio/contracts/:/root/contracts
      - ../eosio/data/logging.json:/root/.local/share/eosio/nodeos/config/logging.json
      - ../eosio/data/genesis.json:/root/.local/share/eosio/nodeos/config/genesis.json
      - ../eosio/data/config.ini:/root/.local/share/eosio/nodeos/config/config.ini
    ports:
      - '8888:8888'
    depends_on:
      - keosd

  keosd:
    container_name: keosd
    hostname: keosd
    build:
      context: .
      dockerfile: build-eosio-testnet.dockerfile
    image: eosio-testnet:latest
    command: keosd --http-server-address=0.0.0.0:8901 --http-validate-host 0 --verbose-http-errors --unlock-timeout=9999999
    networks:
      - testnet
    volumes:
      - ../eosio/data/default.wallet:/root/eosio-wallet/default.wallet
    expose:
      - 8901
    ports:
      - '8901:8901'

  pricefeed:
    container_name: pricefeed
    hostname: pricefeed
    build:
      context: .
      dockerfile: delphioracle.dockerfile
    image: delphioracle:latest
    command: /bin/sh /delphioracle/scripts/update-docker.sh
    environment:
    - EOS_PROTOCOL=http
    - EOS_HOST=nodeos
    - EOS_PORT=8888
    - EOS_CHAIN=83ce967e4a9876d2c050f859e710a58bb06f2d556843391ff28b0c1a95396402
    - EOS_KEY=5JUzsJi7rARZy2rT5eHhcdUKTyVPvaksnEKtNWzyiBbifJA1dUW
    - CONTRACT=delphioracle
    - ORACLE=producer2
    - ORACLE_PERMISSION=active
    - FREQ=15000
    - ORACLE_CONTRACT=delphioracle
    - ORACLE_NAME=producer2
    - MINIMUM_CPU_PERCENT=20
    networks:
      - testnet
    depends_on:
      - nodeos

  writehash:
    container_name: writehash
    hostname: writehash
    build:
      context: .
      dockerfile: delphioracle.dockerfile
    image: delphioracle:latest
    command: /bin/sh /delphioracle-rng-script/run.sh
    environment:
    - EOS_PROTOCOL=http
    - EOS_HOST=nodeos
    - EOS_PORT=8888
    - EOS_CHAIN=83ce967e4a9876d2c050f859e710a58bb06f2d556843391ff28b0c1a95396402
    - EOS_KEY=5JUzsJi7rARZy2rT5eHhcdUKTyVPvaksnEKtNWzyiBbifJA1dUW
    - CONTRACT=delphioracle
    - ORACLE=producer2
    - ORACLE_PERMISSION=active
    - FREQ=15000
    - ORACLE_CONTRACT=delphioracle
    - ORACLE_NAME=producer2
    - MINIMUM_CPU_PERCENT=20
    networks:
      - testnet
    depends_on:
      - nodeos

  steem:
    container_name: steem
    hostname: steem
    image: steemit/steem:latest
    command: /usr/local/steemd-testnet/bin/steemd --data-dir /steemd-data
    volumes:
      - ../steem/data/:/steemd-data
    networks:
      - testnet

networks:
  testnet:
